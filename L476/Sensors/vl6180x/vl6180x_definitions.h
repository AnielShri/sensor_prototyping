/*
 * vl6180x_definitions.h
 *
 *  Created on: Nov 30, 2023
 *      Author: Aniel
 */

#ifndef VL6180X_VL6180X_DEFINITIONS_H_
#define VL6180X_VL6180X_DEFINITIONS_H_

//=============================================================================
//	I2C device addresses
//=============================================================================

#define VL6180X_I2C_DEVICE_ADDRESS	(0x29 << 1)

//=============================================================================
//	Internal register addresses
//=============================================================================

typedef enum
{
	VL6180X_REGISTER_IDENTIFICATION_MODEL_ID = 0x0,
	VL6180X_REGISTER_IDENTIFICATION_MODEL_REV_MAJOR,
	VL6180X_REGISTER_IDENTIFICATION_MODEL_REV_MINOR,
	VL6180X_REGISTER_IDENTIFICATION_MODULE_REV_MAJOR,
	VL6180X_REGISTER_IDENTIFICATION_MODULE_REV_MINOR,
	VL6180X_REGISTER_IDENTIFICATION_DATE_HI,
	VL6180X_REGISTER_IDENTIFICATION_DATE_LO,
	VL6180X_REGISTER_IDENTIFICATION_TIME_START,

	VL6180X_REGISTER_SYSTEM_MODE_GPIO0 = 0x010,
	VL6180X_REGISTER_SYSTEM_MODE_GPIO1,
	VL6180X_REGISTER_SYSTEM_HISTORY_CTRL,
	VL6180X_REGISTER_SYSTEM_INTERRUPT_CONFIG_GPIO,
	VL6180X_REGISTER_SYSTEM_INTERRUPT_CLEAR,
	VL6180X_REGISTER_SYSTEM_FRESH_OUT_OF_RESET,
	VL6180X_REGISTER_SYSTEM_GROUPED_PARAMETER_HOLD,

	VL6180X_REGISTER_SYSRANGE_START = 0x18,
	VL6180X_REGISTER_SYSRANGE_THRESH_HIGH,
	VL6180X_REGISTER_SYSRANGE_THRESH_LOW,
	VL6180X_REGISTER_SYSRANGE_INTERMEASUREMENT_PERIOD,
	VL6180X_REGISTER_SYSRANGE_MAX_CONVERGENCE_TIME,
	VL6180X_REGISTER_SYSRANGE_CROSSTALK_COMPENSATION_RATE,
	VL6180X_REGISTER_SYSRANGE_CROSSTALK_VALID_HEIGHT,
	VL6180X_REGISTER_SYSRANGE_EARLY_CONVERGENCE_ESTIMATE,
	VL6180X_REGISTER_SYSRANGE_PART_TO_PART_RANGE_OFFSET,
	VL6180X_REGISTER_SYSRANGE_RANGE_IGNORE_VALID_HEIGHT,
	VL6180X_REGISTER_SYSRANGE_RANGE_IGNORE_THRESHOLD,
	VL6180X_REGISTER_SYSRANGE_MAX_AMBIENT_LEVEL_MULT,
	VL6180X_REGISTER_SYSRANGE_RANGE_CHECK_ENABLES,
	VL6180X_REGISTER_SYSRANGE_VHV_RECALIBRATE,
	VL6180X_REGISTER_SYSRANGE_VHV_REPEAT_RATE,

	VL6180X_REGISTER_SYSALS_START = 0x038,
	VL6180X_REGISTER_SYSALS_THRESH_HIGH,
	VL6180X_REGISTER_SYSALS_THRESH_LOW,
	VL6180X_REGISTER_SYSALS_INTERMEASUREMENT_PERIOD,
	VL6180X_REGISTER_SYSALS_ANALOGUE_GAIN,
	VL6180X_REGISTER_SYSALS_INTEGRATION_PERIOD,

	VL6180X_REGISTER_RESULT_RANGE_STATUS = 0x04D,
	VL6180X_REGISTER_RESULT_ALS_STATUS,
	VL6180X_REGISTER_RESULT_INTERRUPT_STATUS_GPIO,
	VL6180X_REGISTER_RESULT_ALS_VAL,

	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_0 = 0x052, // 0x052 + n*0x02
	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_1 = 0x054,
	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_2 = 0x056,
	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_3 = 0x058,
	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_4 = 0x05A,
	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_5 = 0x05C,
	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_6 = 0x05E,
	VL6180X_REGISTER_RESULT_HISTORY_BUFFER_7 = 0x060,

	VL6180X_REGISTER_RESULT_RANGE_VAL = 0x062,
	VL6180X_REGISTER_RESULT_RANGE_RAW = 0x064,
	VL6180X_REGISTER_RESULT_RANGE_RETURN_RATE = 0x066,
	VL6180X_REGISTER_RESULT_RANGE_REFERENCE_RATE = 0x068,
	VL6180X_REGISTER_RESULT_RANGE_RETURN_SIGNAL_COUNT = 0x06C,
	VL6180X_REGISTER_RESULT_RANGE_REFERENCE_SIGNAL_COUNT = 0x070,
	VL6180X_REGISTER_RESULT_RANGE_RETURN_AMB_COUNT = 0x074,
	VL6180X_REGISTER_RESULT_RANGE_REFERENCE_AMB_COUNT = 0x078,
	VL6180X_REGISTER_RESULT_RANGE_RETURN_CONV_TIME = 0x07C,
	VL6180X_REGISTER_RESULT_RANGE_REFERENCE_CONV_TIME = 0x080,

	VL6180X_REGISTER_READOUT__AVERAGING_SAMPLE_PERIOD = 0x10A,
	VL6180X_REGISTER_FIRMWARE__BOOTUP = 0x119,
	VL6180X_REGISTER_FIRMWARE__RESULT_SCALER = 0x120,
	VL6180X_REGISTER_I2C_SLAVE__DEVICE_REGISTER = 0x212,
	VL6180X_REGISTER_INTERLEAVED_MODE__ENABLE = 0x2A3,

}vl6180x_register_address_enum;


//=============================================================================
//	identification values
//=============================================================================
#define VL6180X_REGISTER_IDENTIFICATION_MODEL_ID_VALUE 0xB4

#endif /* VL6180X_VL6180X_DEFINITIONS_H_ */
